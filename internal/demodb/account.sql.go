// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: account.sql

package demodb

import (
	"context"
)

const getUserByID = `-- name: GetUserByID :one
SELECT id, username, password, enabled FROM public.account
WHERE id=$1
`

func (q *Queries) GetUserByID(ctx context.Context, id int64) (Account, error) {
	row := q.db.QueryRow(ctx, getUserByID, id)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Password,
		&i.Enabled,
	)
	return i, err
}

const userLogin = `-- name: UserLogin :one
SELECT id, username, password, enabled FROM public.account
WHERE "username"=$1 AND "password"=$2
`

type UserLoginParams struct {
	Username string
	Password string
}

func (q *Queries) UserLogin(ctx context.Context, arg UserLoginParams) (Account, error) {
	row := q.db.QueryRow(ctx, userLogin, arg.Username, arg.Password)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Password,
		&i.Enabled,
	)
	return i, err
}
